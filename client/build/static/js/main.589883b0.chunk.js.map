{"version":3,"sources":["components/Meeting.js","components/Home.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["videoGrid","id","scrId","localStream","localScreen","socket","roomId","Home","navigate","useNavigate","useState","setRoomId","useEffect","axios","get","then","res","console","log","data","catch","err","response","style","height","margin","display","alignItems","width","marginRight","color","textAlign","padding","dispaly","flexDirection","maxWidth","flexWrap","Typography","fontSize","overflowY","backgroundColor","whiteSpace","Button","variant","borderRadius","justifyContent","onClick","useStyles","makeStyles","root","grid","overflowX","controls","position","bottom","loader","join","textTransform","fontWeight","transition","mediaConstraints","audio","video","iceServers","urls","camera","scrSocket","conn","scrConn","Meeting","classes","setJoin","loading","setLoading","showControls","setShowControls","setCount","mic","setMic","cam","setCam","scrn","setScrn","enqueueSnackbar","useSnackbar","handleClick","message","getReady","a","url","window","location","href","split","length","document","getElementById","myVideo","createElement","muted","navigator","mediaDevices","getUserMedia","stream","addVideoStream","setTimeout","alert","error","addEventListener","event","delta","deltaY","scrollLeft","toggleMic","joined","audTrack","getTracks","find","el","kind","readyState","enabled","stop","removeTrack","addTrack","userId","getSenders","replaceTrack","toggleCam","vidTrack","emit","toggleCard","connectionState","status","vid","prof","classList","contains","remove","add","screenShare","getDisplayMedia","onended","disconnect","io","connect","on","myId","rtcPeerConnection","RTCPeerConnection","forEach","track","onicecandidate","candidate","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","type","sdp","setRemoteDescription","RTCSessionDescription","createAnswer","RTCIceCandidate","addIceCandidate","close","audEl","count","vidEl","div","setAttribute","srcObject","play","startsWith","cDiv","p","innerText","append","addLocalTracks","setRemoteStream","streams","sendIceCandidate","className","CircularProgress","ontrack","onconnectionstatechange","restartIce","fromId","IconButton","marginLeft","routes","path","children","element","to","replace","App","routing","useRoutes","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"yJAkFIA,EAEAC,EACAC,EAIAC,EACAC,EAEAC,EAGAC,E,2GCIWC,EA1FF,WACX,IAAMC,EAAWC,cAEjB,EAA4BC,mBAAS,IAArC,mBAAOJ,EAAP,KAAeK,EAAf,KAcA,OAZAC,qBAAU,WACRC,IACGC,IAAI,aACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBR,EAAUK,EAAIG,SAEfC,OAAM,SAACC,GACNJ,QAAQC,IAAIG,EAAIC,eAEnB,IAGD,sBACEC,MAAO,CACLC,OAAQ,OACRC,OAAQ,YAHZ,UAME,sBAAKF,MAAO,CAAEG,QAAS,OAAQC,WAAY,UAA3C,UACE,cAAC,IAAD,CACEJ,MAAO,CACLK,MAAO,OACPJ,OAAQ,OACRK,YAAa,OACbC,MAAO,sBAGX,oBAAIP,MAAO,CAAEQ,UAAW,OAAQC,QAAS,WAAYP,OAAQ,GAA7D,gCAKF,sBACEF,MAAO,CACLU,QAAS,OACTC,cAAe,SACfC,SAAU,eAJd,UAOE,sBACEZ,MAAO,CACLG,QAAS,OACTC,WAAY,SACZS,SAAU,OACVX,OAAQ,YALZ,UAQE,cAACY,EAAA,EAAD,CAAYd,MAAO,CAAEe,SAAU,QAA/B,oCAGA,sBAAKf,MAAO,CAAEG,QAAS,OAAQS,SAAU,QAAzC,UACE,qBACEZ,MAAO,CACLS,QAAS,YACTO,UAAW,OACXC,gBAAiB,kBAJrB,SAOE,cAACH,EAAA,EAAD,CAAYd,MAAO,CAAEkB,WAAY,UAAjC,SAA8CnC,MAEhD,cAACoC,EAAA,EAAD,CAAQC,QAAQ,WAAWpB,MAAO,CAAEqB,aAAc,GAAlD,wBAKJ,qBAAKrB,MAAO,CAAEG,QAAS,OAAQmB,eAAgB,UAA/C,SACE,cAACH,EAAA,EAAD,CACEC,QAAQ,YACRpB,MAAO,CACLiB,gBAAiB,mBACjBV,MAAO,SAETgB,QAAS,WACPtC,EAAS,IAAD,OAAKF,KAPjB,oC,0LD7DJyC,EAAYC,YAAW,CAC3BC,KAAM,CACJzB,OAAQ,QACRgB,gBAAiB,WAEnBU,KAAM,CACJ1B,OAAQ,qBACRI,MAAO,QACPF,QAAS,OACTU,SAAU,OACVe,UAAW,OAEXxB,WAAY,UAEdyB,SAAU,CACRZ,gBAAiB,QACjBhB,OAAQ,OACRI,MAAO,QACPyB,SAAU,WACVC,OAAQ,EACR5B,QAAS,OACTmB,eAAgB,SAChBlB,WAAY,UAEd4B,OAAQ,CACN/B,OAAQ,QACRI,MAAO,QACPyB,SAAU,WACVC,OAAQ,EACR5B,QAAS,OACTmB,eAAgB,SAChBlB,WAAY,UAEd6B,KAAM,CACJC,cAAe,OACfnB,SAAU,OACVN,QAAS,WACTH,YAAa,OACb6B,WAAY,IACZC,WAAY,mBACZ,UAAW,CACTnB,gBAAiB,mBACjBV,MAAO,YAKP8B,EAAmB,CACvBC,OAAO,EACPC,MAAO,CAAElC,MAAO,KAAMJ,OAAQ,MAG1BuC,EAAa,CACjBA,WAAY,CACV,CAAEC,KAAM,gCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,iCACR,CAAEA,KAAM,mCASRC,GAAS,EAMTC,EAAY,KAIZC,EAAO,GACPC,EAAU,GAmsBCC,EAjsBC,WACd,IAAMC,EAAUvB,IAEhB,EAAwBrC,oBAAU,GAAlC,mBAAO8C,EAAP,KAAae,EAAb,KACA,EAA8B7D,oBAAS,GAAvC,mBAAO8D,EAAP,KAAgBC,EAAhB,KACA,EAAwC/D,oBAAS,GAAjD,mBAAOgE,EAAP,KAAqBC,EAArB,KAEA,EAA0BjE,mBAAS,GAAnC,mBAAckE,GAAd,WAEA,EAAsBlE,oBAAS,GAA/B,mBAAOmE,EAAP,KAAYC,EAAZ,KACA,EAAsBpE,oBAAS,GAA/B,mBAAOqE,EAAP,KAAYC,EAAZ,KACA,GAAwBtE,oBAAS,GAAjC,qBAAOuE,GAAP,MAAaC,GAAb,MAIQC,GAAoBC,cAApBD,gBAEFE,GAAc,SAACC,EAAS3C,GAC5BwC,GAAgBG,EAAS,CAAE3C,aAGvB4C,GAAQ,uCAAG,gCAAAC,EAAA,6DACTC,EAAMC,OAAOC,SAASC,KAC5BtF,EAASmF,EAAII,MAAM,KAAKJ,EAAII,MAAM,KAAKC,OAAS,GAEhD9F,EAAY+F,SAASC,eAAe,eAE9BC,EAAUF,SAASG,cAAc,UAC/BC,OAAQ,EAPD,kBAWEC,UAAUC,aAAaC,aAAa1C,GAXtC,OAWb2C,EAXa,OAcbpG,EAAcoG,EACdC,GAAexG,EAAWiG,EAASM,EAAQ,YAAY,GAEvD9B,GAAW,GACXgC,YAAW,WACT9B,GAAgB,KACf,CAAC,MApBS,kDAsBb+B,MAAM,iEACNzF,QAAQ0F,MAAM,2BAAd,MAvBa,QA0BfjB,OAAOkB,iBAAiB,SAAS,SAACC,GAGhC,IAAMC,EAAQD,EAAME,OACpBhB,SAASC,eAAe,cAAcgB,YAAsB,GAARF,KA9BvC,0DAAH,qDAkCdlG,qBAAU,WACR2E,OACC,IAEH,IAAM0B,GAAS,uCAAG,WAAOC,GAAP,mBAAA1B,EAAA,yDAChBV,GAAO,SAACD,GAAD,OAAUA,KAMW,UAJxBsC,EAAWhH,EAAYiH,YAAYC,MAAK,SAACC,GAC3C,MAAmB,UAAZA,EAAGC,SAGCC,WAPG,gBAQdL,EAASM,SAAWN,EAASM,QAE7BhB,YAAW,WACTU,EAASO,SACR,KAZW,iDAeOtB,UAAUC,aAAaC,aAAa,CACrDzC,OAAO,IAhBG,QAsBZ,GAPI0C,EAfQ,OAmBZpG,EAAYwH,YAAYR,GACxBhH,EAAYyH,SAASrB,EAAOa,YAAY,IAEpCF,EACF,IAASW,KAAU1D,EACjBA,EAAK0D,GAAQC,aAAa,GAAGC,aAAaxB,EAAOa,YAAY,IAxBrD,kDA2BZV,MAAM,iEACNzF,QAAQ0F,MAAM,2BAAd,MA5BY,0DAAH,sDAiCTqB,GAAS,uCAAG,WAAOd,GAAP,mBAAA1B,EAAA,yDAChBR,GAAO,SAACD,GAAD,OAAUA,KAMW,UAJxBkD,EAAW9H,EAAYiH,YAAYC,MAAK,SAACC,GAC3C,MAAmB,UAAZA,EAAGC,SAGCC,WAPG,gBAQdS,EAASR,SAAWQ,EAASR,QAE7BhB,YAAW,WACTwB,EAASP,OAELzH,GACFI,EAAO6H,KAAK,gBAAiB5H,EAAQL,GAEvCkI,GAAW,YAAY,KACtB,KAjBW,iDAqBG/B,UAAUC,aAAaC,aAAa,CACjDxC,MAAO,CAAElC,MAAO,KAAMJ,OAAQ,OAtBpB,QA4BZ,GAPA+E,EArBY,OAyBZpG,EAAYwH,YAAYM,GACxB9H,EAAYyH,SAASrB,EAAOa,YAAY,IAEpCF,EACF,IAASW,KAAU1D,EACjBlD,QAAQC,IAAIiD,EAAK0D,GAAQC,cACzB7G,QAAQC,IAAI2G,EAAQ1D,EAAK0D,GAAQO,iBACjCjE,EAAK0D,GAAQC,aAAa,GAAGC,aAAaxB,EAAOa,YAAY,IAG7DnH,GACFI,EAAO6H,KAAK,gBAAiB5H,EAAQL,GAEvCkI,GAAW,YAAY,GAtCX,kDAwCZzB,MAAM,iEACNzF,QAAQ0F,MAAM,2BAAd,MAzCY,0DAAH,sDA8CTwB,GAAa,SAACN,EAAQQ,GAC1B,IAAIC,EAAKC,EAEM,aAAXV,GACFS,EAAMvC,SAASC,eAAe,SAAW6B,GACzCU,EAAOxC,SAASC,eAAe,QAAU6B,KAEzCS,EAAMvC,SAASC,eAAe,aAAe6B,GAC7CU,EAAOxC,SAASC,eAAe,YAAc6B,IAG1CS,GAAQC,IAETF,GAAUC,EAAIE,UAAUC,SAAS,WACnCH,EAAIE,UAAUE,OAAO,UACrBH,EAAKC,UAAUG,IAAI,WACTN,GAAWC,EAAIE,UAAUC,SAAS,YAC5CF,EAAKC,UAAUE,OAAO,UACtBJ,EAAIE,UAAUG,IAAI,aAItB/H,qBAAU,WACRK,QAAQC,IAAI,kBAAmB6D,GAC/Bd,EAASc,IACR,CAACA,IAEJ,IAoIM6D,GAAW,uCAAG,4BAAApD,EAAA,yDACA,OAAdtB,EADc,0CAOCkC,UAAUC,aAAawC,kBAPxB,OAOdtC,EAPc,OAUdnG,EAAcmG,EACdrB,IAAQ,GAGRqB,EAAOa,YAAY,GAAG0B,QAAU,WAC9B5D,IAAQ,GACRhB,EAAU6E,aACV7E,EAAY,OAGdA,EAAY8E,IAAGC,QAAQ,MAEbC,GAAG,YAAb,uCAA0B,WAAOC,GAAP,SAAA3D,EAAA,sDACxBjB,EAAQ,GACRrE,EAAQiJ,EAERlI,QAAQC,IAAI,oBAAsBhB,GAElCgE,EAAUgE,KAAK,YAAa5H,EAAQJ,EAAOD,GAG3CiE,EAAUgF,GAAG,eAAb,sBAA6B,sBAAA1D,EAAA,sDAC3BvE,QAAQC,IAAI,uCADe,4CAI7BgD,EAAUgF,GAAG,cAAb,sBAA4B,sBAAA1D,EAAA,sDAC1BvE,QAAQC,IAAI,sCAEZgD,EAAUgE,KAAK,aAAc5H,EAAQJ,GAAO,GAHlB,4CAM5BgE,EAAUgF,GAAG,aAAb,uCAA2B,WAAOrB,EAAQQ,GAAf,iBAAA7C,EAAA,6DACzBvE,QAAQC,IAAI,0CAA4C2G,GAEpDuB,EAAoB,IAAIC,kBAAkBtF,GAE9C3D,EAAYgH,YAAYkC,SAAQ,SAACC,GAC/BH,EAAkBxB,SAAS2B,EAAOnJ,MAGpCgE,EAAQyD,GAAUuB,EAOlBA,EAAkBI,eAAiB,SAAC3C,GAE9BA,EAAM4C,WACRvF,EAAUgE,KACR,uBACA,CACE5H,SACAoJ,MAAO7C,EAAM4C,UAAUE,cACvBF,UAAW5C,EAAM4C,UAAUA,WAE7BvJ,IA1BmB,kBAkCIkJ,EAAkBQ,cAlCtB,OAkCvBC,EAlCuB,OAmCvBT,EAAkBU,oBAAoBD,GAEtC3F,EAAUgE,KACR,eACA,CACE6B,KAAM,eACNC,IAAKH,EACLvJ,UAEFuH,EACA3H,GACA,GA9CqB,kDAiDvBe,QAAQ0F,MAAR,MAjDuB,0DAA3B,yDAqDAzC,EAAUgF,GAAG,eAAb,uCAA6B,WAAOrC,EAAOgB,EAAQQ,GAAtB,iBAAA7C,EAAA,6DAC3BvE,QAAQC,IAAI,4CAA8C2G,GAEtDuB,EAAoB,IAAIC,kBAAkBtF,GAE9C3D,EAAYgH,YAAYkC,SAAQ,SAACC,GAC/BH,EAAkBxB,SAAS2B,EAAOnJ,MAGpCgE,EAAQyD,GAAUuB,EAKlBA,EAAkBI,eAAiB,SAAC3C,GAE9BA,EAAM4C,WACRvF,EAAUgE,KACR,uBACA,CACE5H,SACAoJ,MAAO7C,EAAM4C,UAAUE,cACvBF,UAAW5C,EAAM4C,UAAUA,WAE7BvJ,IAINkJ,EAAkBa,qBAChB,IAAIC,sBAAsBrD,IA7BD,kBAmCEuC,EAAkBe,eAnCpB,OAmCzBN,EAnCyB,OAoCzBT,EAAkBU,oBAAoBD,GAEtC3F,EAAUgE,KACR,gBACA,CACE6B,KAAM,gBACNC,IAAKH,EACLvJ,UAEFuH,EACA3H,GA9CuB,kDAiDzBe,QAAQ0F,MAAR,MAjDyB,0DAA7B,2DAqDAzC,EAAUgF,GAAG,iBAAiB,SAACrC,EAAOgB,GACpC5G,QAAQC,IAAI,6CAA+C2G,GAE3DzD,EAAQyD,GAAQoC,qBACd,IAAIC,sBAAsBrD,OAI9B3C,EAAUgF,GAAG,wBAAwB,SAACrC,EAAOgB,GAC3C5G,QAAQC,IACN,oDAAsD2G,GAIxD,IAAI4B,EAAY,IAAIW,gBAAgB,CAClCT,cAAe9C,EAAM6C,MACrBD,UAAW5C,EAAM4C,YAEnBrF,EAAQyD,GAAQwC,gBAAgBZ,MAGlCvF,EAAUgF,GAAG,qBAAqB,SAACrB,GACjC5G,QAAQC,IAAI,2BAA6B2G,GAErCzD,EAAQyD,IAASzD,EAAQyD,GAAQyC,QAErC,IAAMC,EAAQxE,SAASC,eAAe,OAAS6B,GAC3C0C,IACFA,EAAM7B,SACN9D,GAAS,SAAC4F,GAAD,OAAWA,EAAQ,MAE9B,IAAMC,EAAQ1E,SAASC,eAAe,OAAS6B,GAC3C4C,IACFA,EAAM/B,SACN9D,GAAS,SAAC4F,GAAD,OAAWA,EAAQ,SA/JR,4CAA1B,uDAtBc,kDA0Ld9D,MAAM,0CACNzF,QAAQ0F,MAAM,8BAAd,MA3Lc,gCA8LhBzB,IAAQ,GACRhB,EAAU6E,aACV7E,EAAY,KAEZ9D,EAAYgH,YAAYkC,SAAQ,SAACC,GAC/BA,EAAM7B,UAnMQ,0DAAH,qDAyMXlB,GAAiB,SAACxG,EAAW8D,EAAOyC,EAAQsB,EAAQQ,GACxD,IAAIqC,EAUJ,GARA5G,EAAM6G,aAAa,KAAM,SAAW9C,GACpC/D,EAAM8G,UAAYrE,EAClBzC,EAAM0E,UAAUG,IAAI,SAEpB7E,EAAM8C,iBAAiB,kBAAkB,WACvC9C,EAAM+G,UAGJhD,EAAOiD,WAAW,SAAsB,aAAXjD,EAAuB,EACtD6C,EAAM3E,SAASG,cAAc,QACzByE,aAAa,KAAM9C,GACvB6C,EAAIlC,UAAUG,IAAI,cAElB,IAAMoC,EAAOhF,SAASG,cAAc,OACpC6E,EAAKJ,aAAa,KAAM,QAAU9C,GAClCkD,EAAKvC,UAAUG,IAAI,aACnBoC,EAAKvC,UAAUG,IAAI,UACnB,IAAMqC,EAAIjF,SAASG,cAAc,KACjC8E,EAAEC,UAAYpD,EACdmD,EAAExC,UAAUG,IAAI,aAEhBoC,EAAKG,OAAOF,GAEZN,EAAIQ,OAAOpH,GACX4G,EAAIQ,OAAOH,GAEX/K,EAAUkL,OAAOR,GAEZrC,IACHvE,EAAM0E,UAAUG,IAAI,UACpBoC,EAAKvC,UAAUE,OAAO,gBAGxB1I,EAAUkL,OAAOpH,IAOrB,SAASqH,GAAe/B,GACtBjJ,EAAYiH,YAAYkC,SAAQ,SAACC,GAC/BH,EAAkBxB,SAAS2B,EAAOpJ,MA/hBlB,SAmiBLyJ,GAniBK,mFAmiBpB,WAA2BR,EAAmBvB,GAA9C,eAAArC,EAAA,+EAG+B4D,EAAkBQ,cAHjD,OAGIC,EAHJ,OAIIT,EAAkBU,oBAAoBD,GAEtC5I,QAAQC,IAAI,YAAa+C,GAEzB5D,EAAO6H,KACL,eACA,CACE6B,KAAM,eACNC,IAAKH,EACLvJ,UAEFuH,EACA5H,EACAgE,GAjBN,gDAoBIhD,QAAQ0F,MAAR,MApBJ,0DAniBoB,+BA2jBLwD,GA3jBK,mFA2jBpB,WAA4Bf,EAAmBvB,GAA/C,eAAArC,EAAA,+EAG+B4D,EAAkBe,eAHjD,OAGIN,EAHJ,OAIIT,EAAkBU,oBAAoBD,GAEtCxJ,EAAO6H,KACL,gBACA,CACE6B,KAAM,gBACNC,IAAKH,EACLvJ,UAEFuH,EACA5H,GAdN,gDAiBIgB,QAAQ0F,MAAR,MAjBJ,0DA3jBoB,sBAglBpB,SAASyE,GAAgBvE,EAAOgB,EAAQQ,GACtC,GAAyB,UAArBxB,EAAM0C,MAAMhC,KAAkB,CAChC,IAAI1D,EAAQkC,SAASG,cAAc,SACnCM,GACExG,EACA6D,EACAgD,EAAMwE,QAAQ,GACd,OAASxD,EACTQ,QAEG,GAAyB,UAArBxB,EAAM0C,MAAMhC,KAAkB,CACvC,IAAIzD,EAAQiC,SAASG,cAAc,SACnCpC,EAAMqC,OAAQ,EACdK,GACExG,EACA8D,EACA+C,EAAMwE,QAAQ,GACd,OAASxD,EACTQ,IAKN,SAASiD,GAAiBzE,EAAOgB,GAC3BhB,EAAM4C,WACRpJ,EAAO6H,KACL,uBACA,CACE5H,SACAoJ,MAAO7C,EAAM4C,UAAUE,cACvBF,UAAW5C,EAAM4C,UAAUA,WAE7BxJ,GAKN,OACE,sBAAKsL,UAAWjH,EAAQrB,KAAxB,UACE,qBAAKhD,GAAG,aAAasL,UAAWjH,EAAQpB,KAAxC,SACGsB,EAAU,cAACgH,EAAA,EAAD,CAAkBjK,MAAO,CAAEE,OAAQ,UAAe,OAE9DiD,EACC,sBAAK6G,UAAWjH,EAAQlB,SAAxB,WACa,IAAVI,EACC,cAACd,EAAA,EAAD,CACEC,QAAQ,WACRG,QAAS,YAzdnBzC,EAAS2I,IAAGC,QAAQ,MAEbC,GAAG,YAAV,uCAAuB,WAAOC,GAAP,SAAA3D,EAAA,sDACrBjB,EAAQ,GACRtE,EAAKkJ,EAELlI,QAAQC,IAAI,aAAejB,GAE3BI,EAAO6H,KAAK,YAAa5H,EAAQL,GAGjCI,EAAO6I,GAAG,eAAV,sBAA0B,sBAAA1D,EAAA,sDACxBvE,QAAQC,IAAI,uCADY,4CAI1Bb,EAAO6I,GAAG,cAAV,sBAAyB,sBAAA1D,EAAA,sDACvBvE,QAAQC,IAAI,sCAEZb,EAAO6H,KAAK,aAAc5H,EAAQL,EAAI8E,GAHf,4CAOzB1E,EAAO6I,GAAG,aAAV,uCAAwB,WAAOrB,EAAQQ,GAAf,eAAA7C,EAAA,6DACtBvE,QAAQC,IAAI,0CAA4C2G,GAGxDsD,GADI/B,EAAoB,IAAIC,kBAAkBtF,IAG9CI,EAAK0D,GAAUuB,EAEfnI,QAAQC,IAAIiD,EAAK0D,GAAQO,iBACzBnH,QAAQC,IAAI,UAAY+C,GAExBoB,GAAYwC,EAAS,UAAW,WAEhCuB,EAAkBqC,QAAU,SAAC5E,GAC3BuE,GAAgBvE,EAAOgB,EAAQQ,IAEjCe,EAAkBI,eAAiB,SAAC3C,GAClCyE,GAAiBzE,IAEnBuC,EAAkBsC,wBAA0B,SAAC7E,GAC3C5F,QAAQC,IAAI2F,GACZ5F,QAAQC,IAAIkI,EAAkBhB,iBACY,WAAtCgB,EAAkBhB,iBACpBgB,EAAkBuC,cAvBA,UA2BhB/B,GAAYR,EAAmBvB,GA3Bf,4CAAxB,yDA8BAxH,EAAO6I,GAAG,eAAV,uCAA0B,WAAOrC,EAAOgB,EAAQQ,GAAtB,eAAA7C,EAAA,6DACxBvE,QAAQC,IACN,4CAA8C2G,EAC9CQ,GAIF8C,GADI/B,EAAoB,IAAIC,kBAAkBtF,IAG9CI,EAAK0D,GAAUuB,EAEfA,EAAkBqC,QAAU,SAAC5E,GAC3BuE,GAAgBvE,EAAOgB,EAAQQ,IAEjCe,EAAkBI,eAAiB,SAAC3C,GAClCyE,GAAiBzE,IAEnBuC,EAAkBa,qBAChB,IAAIC,sBAAsBrD,IAE5BuC,EAAkBsC,wBAA0B,SAAC7E,GAC3C5F,QAAQC,IAAI2F,GACZ5F,QAAQC,IAAIkI,EAAkBhB,kBAtBR,UAyBlB+B,GAAaf,EAAmBvB,GAzBd,4CAA1B,2DA4BAxH,EAAO6I,GAAG,iBAAiB,SAACrC,EAAOgB,GACjC5G,QAAQC,IAAI,6CAA+C2G,GAE3D1D,EAAK0D,GAAQoC,qBAAqB,IAAIC,sBAAsBrD,OAG9DxG,EAAO6I,GAAG,wBAAwB,SAACrC,EAAOgB,GACxC5G,QAAQC,IACN,oDAAsD2G,GAIxD,IAAI4B,EAAY,IAAIW,gBAAgB,CAClCT,cAAe9C,EAAM6C,MACrBD,UAAW5C,EAAM4C,YAEnBtF,EAAK0D,GAAQwC,gBAAgBZ,MAG/BpJ,EAAO6I,GAAG,iBAAiB,SAACrB,GAC1B5G,QAAQC,IAAI,iBAAmB2G,GAC/BM,GAAWN,GAAQ,MAGrBxH,EAAO6I,GAAG,iBAAiB,SAACrB,GAC1B5G,QAAQC,IAAI,iBAAmB2G,GAC/BM,GAAWN,GAAQ,MAGrBxH,EAAO6I,GAAG,kBAAkB,SAAC0C,GAC3BvL,EAAO6H,KAAK,iBAAkB0D,MAGhCvL,EAAO6I,GAAG,qBAAqB,SAACrB,GAC1B1D,EAAK0D,IAAS1D,EAAK0D,GAAQyC,QAE/B,IAAMC,EAAQxE,SAASC,eAAe,OAAS6B,GAC3C0C,GACFA,EAAM7B,SAGR,IAAM+B,EAAQ1E,SAASC,eAAe,OAAS6B,GAC3C4C,IACFA,EAAM/B,SACNrD,GAAYwC,EAAS,QAAS,aA1Hb,4CAAvB,uDAydYtD,EAAQ,IAEVgH,UAAWjH,EAAQd,KANrB,kBAUW,IAATA,EACF,cAACgI,EAAA,EAAD,IACE,KACJ,cAACK,EAAA,EAAD,CACEtK,MAAO,CAAEO,MAAO+C,EAAM,OAAS,MAAOhD,YAAa,QACnDiB,QAAS,WACPmE,GAAmB,IAATzD,IAHd,SAMGqB,EACC,cAAC,IAAD,CAAgBtD,MAAO,CAAEe,SAAU,UAEnC,cAAC,IAAD,CAAmBf,MAAO,CAAEe,SAAU,YAG1C,cAACuJ,EAAA,EAAD,CACEtK,MAAO,CACLO,MAAOiD,EAAM,OAAS,MACtB+G,WAAY,OACZjK,YAAa,QAEfiB,QAAS,WACPkF,GAAmB,IAATxE,IAPd,SAUGuB,EACC,cAAC,IAAD,CAAqBxD,MAAO,CAAEe,SAAU,UAExC,cAAC,IAAD,CAAwBf,MAAO,CAAEe,SAAU,YAGrC,IAATkB,EACC,cAACqI,EAAA,EAAD,CACEtK,MAAO,CAAEO,MAAOmD,GAAO,OAAS,MAAO6G,WAAY,QACnDhJ,QAAS,WAEP8F,MAJJ,SAOG3D,GACC,cAAC,IAAD,CAAwB1D,MAAO,CAAEe,SAAU,UAE3C,cAAC,IAAD,CAA4Bf,MAAO,CAAEe,SAAU,YAGjD,QAQJ,SE9wBKyJ,EAZA,CACb,CACEC,KAAM,IAENC,SAAU,CACR,CAAED,KAAM,IAAKE,QAAS,cAAC,EAAD,KACtB,CAAEF,KAAM,WAAYE,QAAS,cAAC,EAAD,KAC7B,CAAEF,KAAM,IAAKE,QAAS,cAAC,IAAD,CAAUC,GAAG,IAAIC,SAAO,QCIrCC,MAVf,WACE,IAAMC,EAAUC,YAAUR,GAE1B,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,IAAD,CAAkBiB,SAAU,EAA5B,SAAgCF,OCAvBG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5L,MAAK,YAAkD,IAA/C6L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCCdO,IAASC,OACP,cAAC,KAAD,UACE,cAAC,EAAD,MAEFnH,SAASC,eAAe,SAM1ByG,O","file":"static/js/main.589883b0.chunk.js","sourcesContent":["import \"./Meeting.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport { IconButton, Button, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport MicRoundedIcon from \"@material-ui/icons/MicRounded\";\r\nimport MicOffRoundedIcon from \"@material-ui/icons/MicOffRounded\";\r\n\r\nimport VideocamRoundedIcon from \"@material-ui/icons/VideocamRounded\";\r\nimport VideocamOffRoundedIcon from \"@material-ui/icons/VideocamOffRounded\";\r\n\r\nimport ScreenShareRoundedIcon from \"@material-ui/icons/ScreenShareRounded\";\r\nimport StopScreenShareRoundedIcon from \"@material-ui/icons/StopScreenShareRounded\";\r\n\r\nimport io from \"socket.io-client\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: \"#141414\",\r\n  },\r\n  grid: {\r\n    height: \"calc(100vh - 70px)\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    overflowX: \"auto\",\r\n    // justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  controls: {\r\n    backgroundColor: \"white\",\r\n    height: \"70px\",\r\n    width: \"100vw\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loader: {\r\n    height: \"120px\",\r\n    width: \"100vw\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  join: {\r\n    textTransform: \"none\",\r\n    fontSize: \"20px\",\r\n    padding: \"4px 20px\",\r\n    marginRight: \"15px\",\r\n    fontWeight: 600,\r\n    transition: \"0.3s ease-in-out\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(0, 101, 255)\",\r\n      color: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nconst mediaConstraints = {\r\n  audio: true,\r\n  video: { width: 1280, height: 720 },\r\n};\r\n\r\nconst iceServers = {\r\n  iceServers: [\r\n    { urls: \"stun:stun.l.google.com:19302\" },\r\n    { urls: \"stun:stun1.l.google.com:19302\" },\r\n    { urls: \"stun:stun2.l.google.com:19302\" },\r\n    { urls: \"stun:stun3.l.google.com:19302\" },\r\n    { urls: \"stun:stun4.l.google.com:19302\" },\r\n  ],\r\n};\r\n\r\nlet videoGrid;\r\n\r\nlet id;\r\nlet scrId;\r\n\r\nlet camera = true;\r\n\r\nlet localStream;\r\nlet localScreen;\r\n\r\nlet socket;\r\nlet scrSocket = null;\r\n\r\nlet roomId;\r\n\r\nlet conn = {};\r\nlet scrConn = {};\r\n\r\nconst Meeting = () => {\r\n  const classes = useStyles();\r\n\r\n  const [join, setJoin] = useState(-1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showControls, setShowControls] = useState(false);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [mic, setMic] = useState(true);\r\n  const [cam, setCam] = useState(true);\r\n  const [scrn, setScrn] = useState(false);\r\n\r\n  // const flipButton = useRef(null);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClick = (message, variant) => {\r\n    enqueueSnackbar(message, { variant });\r\n  };\r\n\r\n  const getReady = async () => {\r\n    const url = window.location.href;\r\n    roomId = url.split(\"/\")[url.split(\"/\").length - 1];\r\n\r\n    videoGrid = document.getElementById(\"video-grid\");\r\n\r\n    const myVideo = document.createElement(\"video\");\r\n    myVideo.muted = true;\r\n\r\n    let stream;\r\n    try {\r\n      stream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\r\n      // stream = await navigator.mediaDevices.getDisplayMedia();\r\n\r\n      localStream = stream;\r\n      addVideoStream(videoGrid, myVideo, stream, \"my-video\", true);\r\n\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        setShowControls(true);\r\n      }, [1000]);\r\n    } catch (error) {\r\n      alert(\"Could not get user media. Check your media devices or Refresh\");\r\n      console.error(\"Could not get user media\", error);\r\n    }\r\n\r\n    window.addEventListener(\"wheel\", (event) => {\r\n      // event.preventDefault();\r\n\r\n      const delta = event.deltaY;\r\n      document.getElementById(\"video-grid\").scrollLeft += delta * 0.5;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReady();\r\n  }, []);\r\n\r\n  const toggleMic = async (joined) => {\r\n    setMic((mic) => !mic);\r\n\r\n    let audTrack = localStream.getTracks().find((el) => {\r\n      return el.kind === \"audio\";\r\n    });\r\n\r\n    if (audTrack.readyState === \"live\") {\r\n      audTrack.enabled = !audTrack.enabled;\r\n\r\n      setTimeout(() => {\r\n        audTrack.stop();\r\n      }, 500);\r\n    } else {\r\n      try {\r\n        let stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: true,\r\n        });\r\n\r\n        localStream.removeTrack(audTrack);\r\n        localStream.addTrack(stream.getTracks()[0]);\r\n\r\n        if (joined)\r\n          for (let userId in conn) {\r\n            conn[userId].getSenders()[0].replaceTrack(stream.getTracks()[0]);\r\n          }\r\n      } catch (error) {\r\n        alert(\"Could not get user media. Check your media devices or Refresh\");\r\n        console.error(\"Could not get user media\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleCam = async (joined) => {\r\n    setCam((cam) => !cam);\r\n\r\n    let vidTrack = localStream.getTracks().find((el) => {\r\n      return el.kind === \"video\";\r\n    });\r\n\r\n    if (vidTrack.readyState === \"live\") {\r\n      vidTrack.enabled = !vidTrack.enabled;\r\n\r\n      setTimeout(() => {\r\n        vidTrack.stop();\r\n\r\n        if (id) {\r\n          socket.emit(\"video-stopped\", roomId, id);\r\n        }\r\n        toggleCard(\"my-video\", false);\r\n      }, 500);\r\n    } else {\r\n      let stream;\r\n      try {\r\n        stream = await navigator.mediaDevices.getUserMedia({\r\n          video: { width: 1280, height: 720 },\r\n        });\r\n\r\n        localStream.removeTrack(vidTrack);\r\n        localStream.addTrack(stream.getTracks()[0]);\r\n\r\n        if (joined)\r\n          for (let userId in conn) {\r\n            console.log(conn[userId].getSenders());\r\n            console.log(userId, conn[userId].connectionState);\r\n            conn[userId].getSenders()[1].replaceTrack(stream.getTracks()[0]);\r\n          }\r\n\r\n        if (id) {\r\n          socket.emit(\"video-started\", roomId, id);\r\n        }\r\n        toggleCard(\"my-video\", true);\r\n      } catch (error) {\r\n        alert(\"Could not get user media. Check your media devices or Refresh\");\r\n        console.error(\"Could not get user media\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleCard = (userId, status) => {\r\n    let vid, prof;\r\n\r\n    if (userId === \"my-video\") {\r\n      vid = document.getElementById(\"video-\" + userId);\r\n      prof = document.getElementById(\"prof-\" + userId);\r\n    } else {\r\n      vid = document.getElementById(\"video-VID-\" + userId);\r\n      prof = document.getElementById(\"prof-VID-\" + userId);\r\n    }\r\n\r\n    if (!vid || !prof) return;\r\n\r\n    if (status && vid.classList.contains(\"hidden\")) {\r\n      vid.classList.remove(\"hidden\");\r\n      prof.classList.add(\"hidden\");\r\n    } else if (!status && !vid.classList.contains(\"hidden\")) {\r\n      prof.classList.remove(\"hidden\");\r\n      vid.classList.add(\"hidden\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"cam updated to \", cam);\r\n    camera = cam;\r\n  }, [cam]);\r\n\r\n  const connectToSocket = () => {\r\n    socket = io.connect(\"/\");\r\n\r\n    socket.on(\"connected\", async (myId) => {\r\n      setJoin(1);\r\n      id = myId;\r\n\r\n      console.log(\"User Id : \" + id);\r\n\r\n      socket.emit(\"join-room\", roomId, id);\r\n\r\n      // SOCKET EVENT CALLBACKS =====================================================\r\n      socket.on(\"room_created\", async () => {\r\n        console.log(\"Socket event callback: room_created\");\r\n      });\r\n\r\n      socket.on(\"room_joined\", async () => {\r\n        console.log(\"Socket event callback: room_joined\");\r\n\r\n        socket.emit(\"start_call\", roomId, id, cam);\r\n      });\r\n\r\n      // SOCKET EVENT CALLBACKS =====================================================\r\n      socket.on(\"start_call\", async (userId, status) => {\r\n        console.log(\"Socket event callback: start_call from \" + userId);\r\n\r\n        let rtcPeerConnection = new RTCPeerConnection(iceServers);\r\n        addLocalTracks(rtcPeerConnection);\r\n\r\n        conn[userId] = rtcPeerConnection;\r\n\r\n        console.log(conn[userId].connectionState);\r\n        console.log(\"before \" + camera);\r\n\r\n        handleClick(userId + \" joined\", \"success\");\r\n\r\n        rtcPeerConnection.ontrack = (event) => {\r\n          setRemoteStream(event, userId, status);\r\n        };\r\n        rtcPeerConnection.onicecandidate = (event) => {\r\n          sendIceCandidate(event, userId);\r\n        };\r\n        rtcPeerConnection.onconnectionstatechange = (event) => {\r\n          console.log(event);\r\n          console.log(rtcPeerConnection.connectionState);\r\n          if (rtcPeerConnection.connectionState === \"failed\") {\r\n            rtcPeerConnection.restartIce();\r\n          }\r\n        };\r\n\r\n        await createOffer(rtcPeerConnection, userId);\r\n      });\r\n\r\n      socket.on(\"webrtc_offer\", async (event, userId, status) => {\r\n        console.log(\r\n          \"Socket event callback: webrtc_offer from \" + userId,\r\n          status\r\n        );\r\n\r\n        let rtcPeerConnection = new RTCPeerConnection(iceServers);\r\n        addLocalTracks(rtcPeerConnection);\r\n\r\n        conn[userId] = rtcPeerConnection;\r\n\r\n        rtcPeerConnection.ontrack = (event) => {\r\n          setRemoteStream(event, userId, status);\r\n        };\r\n        rtcPeerConnection.onicecandidate = (event) => {\r\n          sendIceCandidate(event, userId);\r\n        };\r\n        rtcPeerConnection.setRemoteDescription(\r\n          new RTCSessionDescription(event)\r\n        );\r\n        rtcPeerConnection.onconnectionstatechange = (event) => {\r\n          console.log(event);\r\n          console.log(rtcPeerConnection.connectionState);\r\n        };\r\n\r\n        await createAnswer(rtcPeerConnection, userId);\r\n      });\r\n\r\n      socket.on(\"webrtc_answer\", (event, userId) => {\r\n        console.log(\"Socket event callback: webrtc_answer from \" + userId);\r\n\r\n        conn[userId].setRemoteDescription(new RTCSessionDescription(event));\r\n      });\r\n\r\n      socket.on(\"webrtc_ice_candidate\", (event, userId) => {\r\n        console.log(\r\n          \"Socket event callback: webrtc_ice_candidate from \" + userId\r\n        );\r\n\r\n        // ICE candidate configuration.\r\n        var candidate = new RTCIceCandidate({\r\n          sdpMLineIndex: event.label,\r\n          candidate: event.candidate,\r\n        });\r\n        conn[userId].addIceCandidate(candidate);\r\n      });\r\n\r\n      socket.on(\"video-stopped\", (userId) => {\r\n        console.log(\"video-stopped \" + userId);\r\n        toggleCard(userId, false);\r\n      });\r\n\r\n      socket.on(\"video-started\", (userId) => {\r\n        console.log(\"video-started \" + userId);\r\n        toggleCard(userId, true);\r\n      });\r\n\r\n      socket.on(\"connect_screen\", (fromId) => {\r\n        socket.emit(\"connect_screen\", fromId);\r\n      });\r\n\r\n      socket.on(\"user-disconnected\", (userId) => {\r\n        if (conn[userId]) conn[userId].close();\r\n\r\n        const audEl = document.getElementById(\"AUD-\" + userId);\r\n        if (audEl) {\r\n          audEl.remove();\r\n          // setCount((count) => count - 1);\r\n        }\r\n        const vidEl = document.getElementById(\"VID-\" + userId);\r\n        if (vidEl) {\r\n          vidEl.remove();\r\n          handleClick(userId + \" left\", \"error\");\r\n          // setCount((count) => count - 1);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const screenShare = async () => {\r\n    if (scrSocket === null) {\r\n      // const myVideo = document.createElement(\"video\");\r\n      // myVideo.muted = true;\r\n\r\n      let stream;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia();\r\n        // stream = await navigator.mediaDevices.getDisplayMedia();\r\n\r\n        localScreen = stream;\r\n        setScrn(true);\r\n        // addVideoStream(videoGrid, myVideo, stream, \"my-screen\");\r\n\r\n        stream.getTracks()[0].onended = () => {\r\n          setScrn(false);\r\n          scrSocket.disconnect();\r\n          scrSocket = null;\r\n        };\r\n\r\n        scrSocket = io.connect(\"/\");\r\n\r\n        scrSocket.on(\"connected\", async (myId) => {\r\n          setJoin(1);\r\n          scrId = myId;\r\n\r\n          console.log(\"Screenshare Id : \" + scrId);\r\n\r\n          scrSocket.emit(\"join-room\", roomId, scrId, id);\r\n\r\n          // SOCKET EVENT CALLBACKS =====================================================\r\n          scrSocket.on(\"room_created\", async () => {\r\n            console.log(\"Socket event callback: room_created\");\r\n          });\r\n\r\n          scrSocket.on(\"room_joined\", async () => {\r\n            console.log(\"Socket event callback: room_joined\");\r\n\r\n            scrSocket.emit(\"start_call\", roomId, scrId, true);\r\n          });\r\n\r\n          scrSocket.on(\"start_call\", async (userId, status) => {\r\n            console.log(\"Socket event callback: start_call from \" + userId);\r\n\r\n            let rtcPeerConnection = new RTCPeerConnection(iceServers);\r\n            // addLocalTracks(rtcPeerConnection);\r\n            localScreen.getTracks().forEach((track) => {\r\n              rtcPeerConnection.addTrack(track, localScreen);\r\n            });\r\n\r\n            scrConn[userId] = rtcPeerConnection;\r\n\r\n            // handleClick(userId + \" joined\", \"success\");\r\n\r\n            // rtcPeerConnection.ontrack = (event) => {\r\n            //   setRemoteStream(event, userId);\r\n            // };\r\n            rtcPeerConnection.onicecandidate = (event) => {\r\n              // sendIceCandidate(event, userId);\r\n              if (event.candidate) {\r\n                scrSocket.emit(\r\n                  \"webrtc_ice_candidate\",\r\n                  {\r\n                    roomId,\r\n                    label: event.candidate.sdpMLineIndex,\r\n                    candidate: event.candidate.candidate,\r\n                  },\r\n                  scrId\r\n                );\r\n              }\r\n            };\r\n\r\n            // await createOffer(rtcPeerConnection, userId);\r\n            let sessionDescription;\r\n            try {\r\n              sessionDescription = await rtcPeerConnection.createOffer();\r\n              rtcPeerConnection.setLocalDescription(sessionDescription);\r\n\r\n              scrSocket.emit(\r\n                \"webrtc_offer\",\r\n                {\r\n                  type: \"webrtc_offer\",\r\n                  sdp: sessionDescription,\r\n                  roomId,\r\n                },\r\n                userId,\r\n                scrId,\r\n                true\r\n              );\r\n            } catch (error) {\r\n              console.error(error);\r\n            }\r\n          });\r\n\r\n          scrSocket.on(\"webrtc_offer\", async (event, userId, status) => {\r\n            console.log(\"Socket event callback: webrtc_offer from \" + userId);\r\n\r\n            let rtcPeerConnection = new RTCPeerConnection(iceServers);\r\n            // addLocalTracks(rtcPeerConnection);\r\n            localScreen.getTracks().forEach((track) => {\r\n              rtcPeerConnection.addTrack(track, localScreen);\r\n            });\r\n\r\n            scrConn[userId] = rtcPeerConnection;\r\n\r\n            // rtcPeerConnection.ontrack = (event) => {\r\n            //   setRemoteStream(event, userId);\r\n            // };\r\n            rtcPeerConnection.onicecandidate = (event) => {\r\n              // sendIceCandidate(event, userId);\r\n              if (event.candidate) {\r\n                scrSocket.emit(\r\n                  \"webrtc_ice_candidate\",\r\n                  {\r\n                    roomId,\r\n                    label: event.candidate.sdpMLineIndex,\r\n                    candidate: event.candidate.candidate,\r\n                  },\r\n                  scrId\r\n                );\r\n              }\r\n            };\r\n            rtcPeerConnection.setRemoteDescription(\r\n              new RTCSessionDescription(event)\r\n            );\r\n\r\n            // await createAnswer(rtcPeerConnection, userId);\r\n            let sessionDescription;\r\n            try {\r\n              sessionDescription = await rtcPeerConnection.createAnswer();\r\n              rtcPeerConnection.setLocalDescription(sessionDescription);\r\n\r\n              scrSocket.emit(\r\n                \"webrtc_answer\",\r\n                {\r\n                  type: \"webrtc_answer\",\r\n                  sdp: sessionDescription,\r\n                  roomId,\r\n                },\r\n                userId,\r\n                scrId\r\n              );\r\n            } catch (error) {\r\n              console.error(error);\r\n            }\r\n          });\r\n\r\n          scrSocket.on(\"webrtc_answer\", (event, userId) => {\r\n            console.log(\"Socket event callback: webrtc_answer from \" + userId);\r\n\r\n            scrConn[userId].setRemoteDescription(\r\n              new RTCSessionDescription(event)\r\n            );\r\n          });\r\n\r\n          scrSocket.on(\"webrtc_ice_candidate\", (event, userId) => {\r\n            console.log(\r\n              \"Socket event callback: webrtc_ice_candidate from \" + userId\r\n            );\r\n\r\n            // ICE candidate configuration.\r\n            var candidate = new RTCIceCandidate({\r\n              sdpMLineIndex: event.label,\r\n              candidate: event.candidate,\r\n            });\r\n            scrConn[userId].addIceCandidate(candidate);\r\n          });\r\n\r\n          scrSocket.on(\"user-disconnected\", (userId) => {\r\n            console.log(\"scrSocket disconnecting \" + userId);\r\n\r\n            if (scrConn[userId]) scrConn[userId].close();\r\n\r\n            const audEl = document.getElementById(\"AUD-\" + userId);\r\n            if (audEl) {\r\n              audEl.remove();\r\n              setCount((count) => count - 1);\r\n            }\r\n            const vidEl = document.getElementById(\"VID-\" + userId);\r\n            if (vidEl) {\r\n              vidEl.remove();\r\n              setCount((count) => count - 1);\r\n            }\r\n          });\r\n        });\r\n      } catch (error) {\r\n        alert(\"Could not get display media. Try again\");\r\n        console.error(\"Could not get display media\", error);\r\n      }\r\n    } else {\r\n      setScrn(false);\r\n      scrSocket.disconnect();\r\n      scrSocket = null;\r\n\r\n      localScreen.getTracks().forEach((track) => {\r\n        track.stop();\r\n      });\r\n      // document.getElementById(\"my-screen\").remove();\r\n    }\r\n  };\r\n\r\n  const addVideoStream = (videoGrid, video, stream, userId, status) => {\r\n    let div;\r\n\r\n    video.setAttribute(\"id\", \"video-\" + userId);\r\n    video.srcObject = stream;\r\n    video.classList.add(\"video\");\r\n\r\n    video.addEventListener(\"loadedmetadata\", () => {\r\n      video.play();\r\n    });\r\n\r\n    if (userId.startsWith(\"VID-\") || userId === \"my-video\") {\r\n      div = document.createElement(\"div\");\r\n      div.setAttribute(\"id\", userId);\r\n      div.classList.add(\"video-wrap\");\r\n\r\n      const cDiv = document.createElement(\"div\");\r\n      cDiv.setAttribute(\"id\", \"prof-\" + userId);\r\n      cDiv.classList.add(\"prof-card\");\r\n      cDiv.classList.add(\"hidden\");\r\n      const p = document.createElement(\"p\");\r\n      p.innerText = userId;\r\n      p.classList.add(\"prof-text\");\r\n\r\n      cDiv.append(p);\r\n\r\n      div.append(video);\r\n      div.append(cDiv);\r\n\r\n      videoGrid.append(div);\r\n\r\n      if (!status) {\r\n        video.classList.add(\"hidden\");\r\n        cDiv.classList.remove(\"hidden\");\r\n      }\r\n    } else {\r\n      videoGrid.append(video);\r\n    }\r\n\r\n    // setCount((count) => count + 1);\r\n  };\r\n\r\n  // FUNCTIONS ==================================================================\r\n  function addLocalTracks(rtcPeerConnection) {\r\n    localStream.getTracks().forEach((track) => {\r\n      rtcPeerConnection.addTrack(track, localStream);\r\n    });\r\n  }\r\n\r\n  async function createOffer(rtcPeerConnection, userId) {\r\n    let sessionDescription;\r\n    try {\r\n      sessionDescription = await rtcPeerConnection.createOffer();\r\n      rtcPeerConnection.setLocalDescription(sessionDescription);\r\n\r\n      console.log(\"emitting \", camera);\r\n\r\n      socket.emit(\r\n        \"webrtc_offer\",\r\n        {\r\n          type: \"webrtc_offer\",\r\n          sdp: sessionDescription,\r\n          roomId,\r\n        },\r\n        userId,\r\n        id,\r\n        camera\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async function createAnswer(rtcPeerConnection, userId) {\r\n    let sessionDescription;\r\n    try {\r\n      sessionDescription = await rtcPeerConnection.createAnswer();\r\n      rtcPeerConnection.setLocalDescription(sessionDescription);\r\n\r\n      socket.emit(\r\n        \"webrtc_answer\",\r\n        {\r\n          type: \"webrtc_answer\",\r\n          sdp: sessionDescription,\r\n          roomId,\r\n        },\r\n        userId,\r\n        id\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function setRemoteStream(event, userId, status) {\r\n    if (event.track.kind === \"audio\") {\r\n      let audio = document.createElement(\"audio\");\r\n      addVideoStream(\r\n        videoGrid,\r\n        audio,\r\n        event.streams[0],\r\n        \"AUD-\" + userId,\r\n        status\r\n      );\r\n    } else if (event.track.kind === \"video\") {\r\n      let video = document.createElement(\"video\");\r\n      video.muted = true;\r\n      addVideoStream(\r\n        videoGrid,\r\n        video,\r\n        event.streams[0],\r\n        \"VID-\" + userId,\r\n        status\r\n      );\r\n    }\r\n  }\r\n\r\n  function sendIceCandidate(event, userId) {\r\n    if (event.candidate) {\r\n      socket.emit(\r\n        \"webrtc_ice_candidate\",\r\n        {\r\n          roomId,\r\n          label: event.candidate.sdpMLineIndex,\r\n          candidate: event.candidate.candidate,\r\n        },\r\n        id\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div id=\"video-grid\" className={classes.grid}>\r\n        {loading ? <CircularProgress style={{ margin: \"auto\" }} /> : null}\r\n      </div>\r\n      {showControls ? (\r\n        <div className={classes.controls}>\r\n          {join === -1 ? (\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                connectToSocket();\r\n                setJoin(0);\r\n              }}\r\n              className={classes.join}\r\n            >\r\n              Join\r\n            </Button>\r\n          ) : join === 0 ? (\r\n            <CircularProgress />\r\n          ) : null}\r\n          <IconButton\r\n            style={{ color: mic ? \"grey\" : \"red\", marginRight: \"10px\" }}\r\n            onClick={() => {\r\n              toggleMic(join === 1);\r\n            }}\r\n          >\r\n            {mic ? (\r\n              <MicRoundedIcon style={{ fontSize: \"30px\" }} />\r\n            ) : (\r\n              <MicOffRoundedIcon style={{ fontSize: \"30px\" }} />\r\n            )}\r\n          </IconButton>\r\n          <IconButton\r\n            style={{\r\n              color: cam ? \"grey\" : \"red\",\r\n              marginLeft: \"10px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n            onClick={() => {\r\n              toggleCam(join === 1);\r\n            }}\r\n          >\r\n            {cam ? (\r\n              <VideocamRoundedIcon style={{ fontSize: \"30px\" }} />\r\n            ) : (\r\n              <VideocamOffRoundedIcon style={{ fontSize: \"30px\" }} />\r\n            )}\r\n          </IconButton>\r\n          {join === 1 ? (\r\n            <IconButton\r\n              style={{ color: scrn ? \"grey\" : \"red\", marginLeft: \"10px\" }}\r\n              onClick={() => {\r\n                // toggleScrn();\r\n                screenShare();\r\n              }}\r\n            >\r\n              {scrn ? (\r\n                <ScreenShareRoundedIcon style={{ fontSize: \"30px\" }} />\r\n              ) : (\r\n                <StopScreenShareRoundedIcon style={{ fontSize: \"30px\" }} />\r\n              )}\r\n            </IconButton>\r\n          ) : null}\r\n          {/* <IconButton\r\n          style={{ marginLeft: \"20px\", display: \"none\" }}\r\n          ref={flipButton}\r\n        >\r\n          <FlipCameraAndroidIcon style={{ fontSize: \"30px\" }} />\r\n        </IconButton> */}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meeting;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [roomId, setRoomId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/call\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setRoomId(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        margin: \"0px 30px\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <CallIcon\r\n          style={{\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            marginRight: \"14px\",\r\n            color: \"rgb(0, 131, 255)\",\r\n          }}\r\n        />\r\n        <h1 style={{ textAlign: \"left\", padding: \"20px 0px\", margin: 0 }}>\r\n          Conference Call\r\n        </h1>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          dispaly: \"flex\",\r\n          flexDirection: \"column\",\r\n          maxWidth: \"fit-content\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexWrap: \"wrap\",\r\n            margin: \"20px 0px\",\r\n          }}\r\n        >\r\n          <Typography style={{ fontSize: \"18px\" }}>\r\n            Meeting ID&nbsp;&nbsp;&nbsp;\r\n          </Typography>\r\n          <div style={{ display: \"flex\", maxWidth: \"100%\" }}>\r\n            <div\r\n              style={{\r\n                padding: \"10px 14px\",\r\n                overflowY: \"auto\",\r\n                backgroundColor: \"rgb(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              <Typography style={{ whiteSpace: \"nowrap\" }}>{roomId}</Typography>\r\n            </div>\r\n            <Button variant=\"outlined\" style={{ borderRadius: 0 }}>\r\n              COPY\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: \"rgb(0, 131, 255)\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => {\r\n              navigate(`/${roomId}`);\r\n            }}\r\n          >\r\n            START MEETING\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home\";\r\nimport Meeting from \"./components/Meeting\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    // element: <Layout />,\r\n    children: [\r\n      { path: \"/\", element: <Home /> },\r\n      { path: \"/:roomId\", element: <Meeting /> },\r\n      { path: \"*\", element: <Navigate to=\"/\" replace /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\n\r\nimport routes from \"./routes\";\r\n\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\n\r\nfunction App() {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SnackbarProvider maxSnack={3}>{routing}</SnackbarProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}